type Checklist {
  createdAt: ISO8601DateTime!
  id: ID!
  name: String
  updatedAt: ISO8601DateTime!
}

"""
Autogenerated input type of CreateDropzone
"""
input CreateDropzoneInput {
  attributes: DropzoneInput!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of CreateDropzone
"""
type CreateDropzonePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  dropzone: Dropzone
  errors: [String!]
  fieldErrors: [FieldError!]
}

"""
Autogenerated input type of CreateExtra
"""
input CreateExtraInput {
  attributes: ExtraInput!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: Int
}

"""
Autogenerated return type of CreateExtra
"""
type CreateExtraPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [String!]
  extra: Extra
  fieldErrors: [FieldError!]
}

"""
Autogenerated input type of CreateLoad
"""
input CreateLoadInput {
  attributes: LoadInput!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of CreateLoad
"""
type CreateLoadPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [String!]
  fieldErrors: [FieldError!]
  load: Load
}

"""
Autogenerated input type of CreatePlane
"""
input CreatePlaneInput {
  attributes: PlaneInput!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of CreatePlane
"""
type CreatePlanePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [String!]
  fieldErrors: [FieldError!]
  plane: Plane
}

"""
Autogenerated input type of CreateRig
"""
input CreateRigInput {
  attributes: RigInput!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of CreateRig
"""
type CreateRigPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [String!]
  fieldErrors: [FieldError!]
  rig: Rig
}

"""
Autogenerated input type of CreateSlot
"""
input CreateSlotInput {
  attributes: SlotInput!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of CreateSlot
"""
type CreateSlotPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [String!]
  fieldErrors: [FieldError!]
  slot: Slot
}

"""
Autogenerated input type of CreateTicket
"""
input CreateTicketInput {
  attributes: TicketTypeInput!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of CreateTicket
"""
type CreateTicketPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [String!]
  fieldErrors: [FieldError!]
  ticketType: TicketType
}

type Credential {
  accessToken: String!
  client: String!
  expiry: Int!
  tokenType: String!
  uid: String!
}

"""
Autogenerated input type of DeleteDropzone
"""
input DeleteDropzoneInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: Int!
}

"""
Autogenerated return type of DeleteDropzone
"""
type DeleteDropzonePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  dropzone: Dropzone
}

"""
Autogenerated input type of DeleteLoad
"""
input DeleteLoadInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: Int!
}

"""
Autogenerated return type of DeleteLoad
"""
type DeleteLoadPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  load: Load
}

"""
Autogenerated input type of DeletePlane
"""
input DeletePlaneInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: Int!
}

"""
Autogenerated return type of DeletePlane
"""
type DeletePlanePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  plane: Plane
}

"""
Autogenerated input type of DeleteSlot
"""
input DeleteSlotInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: Int!
}

"""
Autogenerated return type of DeleteSlot
"""
type DeleteSlotPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  slot: Slot
}

"""
Autogenerated input type of DeleteTicket
"""
input DeleteTicketInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: Int!
}

"""
Autogenerated return type of DeleteTicket
"""
type DeleteTicketPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  ticketType: TicketType
}

type Dropzone {
  banner: String
  bannerId: Int
  createdAt: Int!
  currentUser: DropzoneUser!
  dropzoneUsers(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    permissions: [Permission!]
    search: String
  ): DropzoneUserConnection!
  federation: Federation!
  id: ID!
  isCreditSystemEnabled: Boolean!
  isPublic: Boolean!
  loads(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String
    earliestTimestamp: Int

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): LoadConnection!
  name: String
  planes: [Plane!]!
  primaryColor: String
  rigInspectionChecklist: Checklist
  secondaryColor: String
  ticketTypes: [TicketType!]!
  updatedAt: Int!
  userRoles: [UserRole!]!
}

"""
The connection type for Dropzone.
"""
type DropzoneConnection {
  """
  A list of edges.
  """
  edges: [DropzoneEdge]

  """
  A list of nodes.
  """
  nodes: [Dropzone]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
}

"""
An edge in a connection.
"""
type DropzoneEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: Dropzone
}

input DropzoneInput {
  banner: String
  federationId: Int!
  isCreditSystemEnabled: Boolean
  isPublic: Boolean
  name: String!
  primaryColor: String
  secondaryColor: String
}

type DropzoneUser {
  createdAt: Int!
  credits: Int
  expiresAt: Int
  id: ID!
  permissions: [Permission!]
  role: UserRole
  updatedAt: Int!
  user: User!
}

"""
The connection type for DropzoneUser.
"""
type DropzoneUserConnection {
  """
  A list of edges.
  """
  edges: [DropzoneUserEdge]

  """
  A list of nodes.
  """
  nodes: [DropzoneUser]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
}

"""
An edge in a connection.
"""
type DropzoneUserEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: DropzoneUser
}

type Extra {
  cost: Int!
  createdAt: Int!
  id: ID!
  name: String
  ticketTypes: [TicketType!]!
  updatedAt: Int!
}

input ExtraInput {
  cost: Float
  dropzoneId: Int
  name: String
  ticketTypeIds: [Int!]
}

type Federation {
  createdAt: Int!
  id: ID!
  name: String
  updatedAt: Int!
}

type FieldError {
  field: String!
  message: String!
}

"""
An ISO 8601-encoded datetime
"""
scalar ISO8601DateTime

type JumpType {
  createdAt: Int!
  id: ID!
  name: String
  updatedAt: Int!
}

type License {
  createdAt: Int!
  federation: Federation
  id: ID!
  name: String
  updatedAt: Int!
}

type Load {
  createdAt: Int!
  dispatchAt: Int
  gca: DropzoneUser
  hasLanded: Boolean
  id: ID!
  isFull: Boolean!
  isOpen: Boolean!
  isReady: Boolean!
  loadMaster: DropzoneUser
  maxSlots: Int!
  name: String
  pilot: DropzoneUser
  plane: Plane!
  slots: [Slot!]
  updatedAt: Int!
}

"""
The connection type for Load.
"""
type LoadConnection {
  """
  A list of edges.
  """
  edges: [LoadEdge]

  """
  A list of nodes.
  """
  nodes: [Load]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
}

"""
An edge in a connection.
"""
type LoadEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: Load
}

input LoadInput {
  dispatchAt: Int
  gcaId: Int
  hasLanded: Boolean
  isOpen: Boolean
  loadMasterId: Int
  maxSlots: Int
  name: String
  pilotId: Int
  planeId: Int
}

type Mutation {
  createDropzone(
    """
    Parameters for CreateDropzone
    """
    input: CreateDropzoneInput!
  ): CreateDropzonePayload
  createExtra(
    """
    Parameters for CreateExtra
    """
    input: CreateExtraInput!
  ): CreateExtraPayload
  createLoad(
    """
    Parameters for CreateLoad
    """
    input: CreateLoadInput!
  ): CreateLoadPayload
  createPlane(
    """
    Parameters for CreatePlane
    """
    input: CreatePlaneInput!
  ): CreatePlanePayload
  createRig(
    """
    Parameters for CreateRig
    """
    input: CreateRigInput!
  ): CreateRigPayload
  createSlot(
    """
    Parameters for CreateSlot
    """
    input: CreateSlotInput!
  ): CreateSlotPayload
  createTicketType(
    """
    Parameters for CreateTicket
    """
    input: CreateTicketInput!
  ): CreateTicketPayload
  deleteDropzone(
    """
    Parameters for DeleteDropzone
    """
    input: DeleteDropzoneInput!
  ): DeleteDropzonePayload
  deleteLoad(
    """
    Parameters for DeleteLoad
    """
    input: DeleteLoadInput!
  ): DeleteLoadPayload
  deletePlane(
    """
    Parameters for DeletePlane
    """
    input: DeletePlaneInput!
  ): DeletePlanePayload
  deleteSlot(
    """
    Parameters for DeleteSlot
    """
    input: DeleteSlotInput!
  ): DeleteSlotPayload
  deleteTicketType(
    """
    Parameters for DeleteTicket
    """
    input: DeleteTicketInput!
  ): DeleteTicketPayload
  updateDropzone(
    """
    Parameters for UpdateDropzone
    """
    input: UpdateDropzoneInput!
  ): UpdateDropzonePayload
  updateExtra(
    """
    Parameters for UpdateExtra
    """
    input: UpdateExtraInput!
  ): UpdateExtraPayload
  updateLoad(
    """
    Parameters for UpdateLoad
    """
    input: UpdateLoadInput!
  ): UpdateLoadPayload
  updatePlane(
    """
    Parameters for UpdatePlane
    """
    input: UpdatePlaneInput!
  ): UpdatePlanePayload
  updateRig(
    """
    Parameters for UpdateRig
    """
    input: UpdateRigInput!
  ): UpdateRigPayload
  updateSlot(
    """
    Parameters for UpdateSlot
    """
    input: UpdateSlotInput!
  ): UpdateSlotPayload
  updateTicketType(
    """
    Parameters for UpdateTicket
    """
    input: UpdateTicketInput!
  ): UpdateTicketPayload
  updateUser(
    """
    Parameters for UpdateUser
    """
    input: UpdateUserInput!
  ): UpdateUserPayload
  userLogin(email: String!, password: String!): UserLoginPayload
  userLogout: UserLogoutPayload
  userResendConfirmation(email: String!, redirectUrl: String!): UserResendConfirmationPayload
  userSendPasswordReset(email: String!, redirectUrl: String!): UserSendPasswordResetPayload
  userSendPasswordResetWithToken(email: String!, redirectUrl: String!): UserSendPasswordResetWithTokenPayload
  userSignUp(confirmSuccessUrl: String, email: String!, exitWeight: Float!, licenseId: Int, name: String!, password: String!, passwordConfirmation: String!, phone: String!): UserSignUpPayload
  userUpdatePassword(currentPassword: String, password: String!, passwordConfirmation: String!): UserUpdatePasswordPayload
  userUpdatePasswordWithToken(password: String!, passwordConfirmation: String!, resetPasswordToken: String!): UserUpdatePasswordWithTokenPayload
}

"""
Information about pagination in a connection.
"""
type PageInfo {
  """
  When paginating forwards, the cursor to continue.
  """
  endCursor: String

  """
  When paginating forwards, are there more items?
  """
  hasNextPage: Boolean!

  """
  When paginating backwards, are there more items?
  """
  hasPreviousPage: Boolean!

  """
  When paginating backwards, the cursor to continue.
  """
  startCursor: String
}

enum Permission {
  """
  actAsDZSO
  """
  actAsDZSO

  """
  actAsGCA
  """
  actAsGCA

  """
  actAsLoadMaster
  """
  actAsLoadMaster

  """
  actAsPilot
  """
  actAsPilot

  """
  createChecklist
  """
  createChecklist

  """
  createDropzoneRig
  """
  createDropzoneRig

  """
  createExtra
  """
  createExtra

  """
  createLoad
  """
  createLoad

  """
  createPackjob
  """
  createPackjob

  """
  createPlane
  """
  createPlane

  """
  createRig
  """
  createRig

  """
  createSlot
  """
  createSlot

  """
  createStudentSlot
  """
  createStudentSlot

  """
  createTicketType
  """
  createTicketType

  """
  createUser
  """
  createUser

  """
  createUserSlot
  """
  createUserSlot

  """
  deleteChecklist
  """
  deleteChecklist

  """
  deleteDropzone
  """
  deleteDropzone

  """
  deleteDropzoneRig
  """
  deleteDropzoneRig

  """
  deleteExtra
  """
  deleteExtra

  """
  deleteLoad
  """
  deleteLoad

  """
  deletePackjob
  """
  deletePackjob

  """
  deletePlane
  """
  deletePlane

  """
  deleteRig
  """
  deleteRig

  """
  deleteSlot
  """
  deleteSlot

  """
  deleteStudentSlot
  """
  deleteStudentSlot

  """
  deleteTicketType
  """
  deleteTicketType

  """
  deleteUser
  """
  deleteUser

  """
  deleteUserSlot
  """
  deleteUserSlot

  """
  readChecklist
  """
  readChecklist

  """
  readExtra
  """
  readExtra

  """
  readLoad
  """
  readLoad

  """
  readPackjob
  """
  readPackjob

  """
  readPermissions
  """
  readPermissions

  """
  readRig
  """
  readRig

  """
  readUser
  """
  readUser

  """
  updateChecklist
  """
  updateChecklist

  """
  updateDropzone
  """
  updateDropzone

  """
  updateDropzoneRig
  """
  updateDropzoneRig

  """
  updateExtra
  """
  updateExtra

  """
  updateLoad
  """
  updateLoad

  """
  updatePackjob
  """
  updatePackjob

  """
  updatePermissions
  """
  updatePermissions

  """
  updatePlane
  """
  updatePlane

  """
  updateRig
  """
  updateRig

  """
  updateSlot
  """
  updateSlot

  """
  updateStudentSlot
  """
  updateStudentSlot

  """
  updateTicketType
  """
  updateTicketType

  """
  updateUser
  """
  updateUser

  """
  updateUserSlot
  """
  updateUserSlot
}

type Plane {
  createdAt: Int!
  dropzone: Dropzone!
  hours: Int
  id: ID!
  maxSlots: Int
  minSlots: Int
  name: String
  nextMaintenanceHours: Int
  registration: String
  updatedAt: Int!
}

input PlaneInput {
  dropzoneId: Int
  hours: Int
  maxSlots: Int
  minSlots: Int
  name: String
  nextMaintenanceHours: Int
  registration: String
}

type Query {
  """
  Get dropzone details
  """
  dropzone(id: Int!): Dropzone!

  """
  Get all available dropzones
  """
  dropzones(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): DropzoneConnection!

  """
  Get ticket addons for a dropzone
  """
  extras(dropzoneId: Int!): [Extra!]!

  """
  Available federations
  """
  federations: [Federation!]!

  """
  Load base64 images as graphql
  """
  image(id: Int!): String

  """
  Get all jump types
  """
  jumpTypes(allowedForUserId: Int): [JumpType!]!

  """
  Get all licenses for a federation
  """
  licenses(federationId: Int): [License!]!

  """
  Get load by id
  """
  load(id: Int!): Load!

  """
  Get loads
  """
  loads(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String
    dropzoneId: Int!
    earliestTimestamp: Int

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): LoadConnection!

  """
  Get planes from a dropzone
  """
  planes(dropzoneId: Int!): [Plane!]!

  """
  Get rigs for user or dropzone
  """
  rigs(dropzoneId: Int, userId: Int): [Rig!]

  """
  Get ticket types for a dropzone
  """
  ticketTypes(allowManifestingSelf: Boolean, dropzoneId: Int!): [TicketType!]!
  userCheckPasswordToken(redirectUrl: String, resetPasswordToken: String!): User!
  userConfirmAccount(confirmationToken: String!, redirectUrl: String!): User!
}

type Rig {
  canopySize: Int
  createdAt: Int!
  dropzone: Dropzone
  id: ID!
  maintainedAt: Int
  make: String
  model: String
  packValue: Int
  repackExpiresAt: Int
  serial: String
  updatedAt: Int!
  user: User
}

input RigInput {
  canopySize: Int
  dropzoneId: Int
  maintainedAt: Int
  make: String
  model: String
  packValue: Int
  repackExpiresAt: Int
  serial: String
  userId: Int
}

type Slot {
  createdAt: Int!
  exitWeight: Float!
  extras: [Extra!]
  id: ID!
  jumpType: JumpType
  load: Load!
  rig: Rig
  ticketType: TicketType
  user: User
  wingLoading: Float
}

input SlotInput {
  exitWeight: Float
  extraIds: [Int!]
  jumpTypeId: Int
  loadId: Int
  rigId: Int
  ticketTypeId: Int
  userId: Int
}

type TicketType {
  allowManifestingSelf: Boolean
  altitude: Int
  cost: Float
  createdAt: Int!
  currency: String
  extras: [Extra!]!
  id: ID!
  name: String
  updatedAt: Int!
}

input TicketTypeInput {
  allowManifestingSelf: Boolean
  altitude: Int
  cost: Float
  currency: String
  dropzoneId: Int
  extraIds: [Int!]
  name: String
}

"""
Autogenerated input type of UpdateDropzone
"""
input UpdateDropzoneInput {
  attributes: DropzoneInput!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: Int!
}

"""
Autogenerated return type of UpdateDropzone
"""
type UpdateDropzonePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  dropzone: Dropzone
  errors: [String!]
  fieldErrors: [FieldError!]
}

"""
Autogenerated input type of UpdateExtra
"""
input UpdateExtraInput {
  attributes: ExtraInput!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: Int
}

"""
Autogenerated return type of UpdateExtra
"""
type UpdateExtraPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [String!]
  extra: Extra
  fieldErrors: [FieldError!]
}

"""
Autogenerated input type of UpdateLoad
"""
input UpdateLoadInput {
  attributes: LoadInput!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: Int!
}

"""
Autogenerated return type of UpdateLoad
"""
type UpdateLoadPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [String!]
  fieldErrors: [FieldError!]
  load: Load
}

"""
Autogenerated input type of UpdatePlane
"""
input UpdatePlaneInput {
  attributes: PlaneInput!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: Int!
}

"""
Autogenerated return type of UpdatePlane
"""
type UpdatePlanePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [String!]
  fieldErrors: [FieldError!]
  plane: Plane
}

"""
Autogenerated input type of UpdateRig
"""
input UpdateRigInput {
  attributes: RigInput!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: Int
}

"""
Autogenerated return type of UpdateRig
"""
type UpdateRigPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [String!]
  fieldErrors: [FieldError!]
  rig: Rig
}

"""
Autogenerated input type of UpdateSlot
"""
input UpdateSlotInput {
  attributes: SlotInput!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: Int!
}

"""
Autogenerated return type of UpdateSlot
"""
type UpdateSlotPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [String!]
  fieldErrors: [FieldError!]
  slot: Slot
}

"""
Autogenerated input type of UpdateTicket
"""
input UpdateTicketInput {
  attributes: TicketTypeInput!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: Int!
}

"""
Autogenerated return type of UpdateTicket
"""
type UpdateTicketPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [String!]
  fieldErrors: [FieldError!]
  ticketType: TicketType
}

"""
Autogenerated input type of UpdateUser
"""
input UpdateUserInput {
  attributes: UserInput!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: Int
}

"""
Autogenerated return type of UpdateUser
"""
type UpdateUserPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  errors: [String!]
  fieldErrors: [FieldError!]
  user: User
}

type User {
  createdAt: Int!
  dropzoneUsers: [DropzoneUser!]
  email: String
  exitWeight: String
  id: ID!
  jumpTypes: [JumpType!]
  license: License
  name: String
  phone: String
  rigs: [Rig!]
  updatedAt: Int!
}

input UserInput {
  email: String
  exitWeight: Float
  image: String
  licenseId: Int
  name: String
  nickname: String
  phone: String
}

"""
Autogenerated return type of UserLogin
"""
type UserLoginPayload {
  authenticatable: User!
  credentials: Credential!
}

"""
Autogenerated return type of UserLogout
"""
type UserLogoutPayload {
  authenticatable: User!
}

"""
Autogenerated return type of UserResendConfirmation
"""
type UserResendConfirmationPayload {
  message: String!
}

type UserRole {
  createdAt: Int!
  dropzone: Dropzone!
  dropzoneId: Int!
  id: ID!
  name: String
  permissions: [String!]!
  updatedAt: Int!
}

"""
Autogenerated return type of UserSendPasswordReset
"""
type UserSendPasswordResetPayload {
  message: String!
}

"""
Autogenerated return type of UserSendPasswordResetWithToken
"""
type UserSendPasswordResetWithTokenPayload {
  message: String!
}

"""
Autogenerated return type of UserSignUp
"""
type UserSignUpPayload {
  authenticatable: User

  """
  Authentication credentials. Null if after signUp resource is not active for
  authentication (e.g. Email confirmation required).
  """
  credentials: Credential
  errors: [String!]
  fieldErrors: [FieldError!]
}

"""
Autogenerated return type of UserUpdatePassword
"""
type UserUpdatePasswordPayload {
  authenticatable: User!
}

"""
Autogenerated return type of UserUpdatePasswordWithToken
"""
type UserUpdatePasswordWithTokenPayload {
  authenticatable: User!

  """
  Authentication credentials. Resource must be signed_in for credentials to be returned.
  """
  credentials: Credential
}